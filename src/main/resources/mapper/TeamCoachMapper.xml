<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="indi.xp.coachview.mapper.TeamCoachMapper">

    <resultMap id="teamCoachResultMap" type="indi.xp.coachview.model.TeamCoach">
        <id column="coach_id" property="coachId" />
        <result column="name" property="name" />
        <result column="id_number" property="idNumber" />
        <result column="age" property="age" />
        <result column="photo" property="photo" />
        <result column="team_id" property="teamId" />
        <result column="team_name" property="teamName" />
        <result column="create_time" property="createTime" />
        <result column="delete_status" property="deleteStatus" />
    </resultMap>
    
    <sql id="table_name">team_coach</sql>
    
    <sql id="pk_column">coach_id</sql>
    
    <sql id="common_where">
        where delete_status = 0
        <include refid="auth_filter" />
    </sql>

    <sql id="query_by_param">
        <if test="paramMap != null and !paramMap.isEmpty()">
            <foreach collection="paramMap" item="valueList" index="key">
                <if test="valueList != null and valueList.length > 0">
                    and ${key} in
                    <foreach collection="valueList" item="value" open="(" separator="," close=")">
                        #{value}
                    </foreach>
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="auth_filter">
        <if test="authFilterMap != null and !authFilterMap.isEmpty()">
            <foreach collection="authFilterMap" item="valueList" index="key">
                <if test="valueList != null and valueList.length > 0">
                    and ${key} in
                    <foreach collection="valueList" item="value" open="(" separator="," close=")">
                        #{value}
                    </foreach>
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="pk_in">
        <if test="idList != null and idList.size() > 0">
            and <include refid="pk_column" /> in
            <foreach collection="idList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </sql>

    <select id="getById" parameterType="java.lang.String" resultMap="teamCoachResultMap">
        select * from <include refid="table_name" />
        <include refid="common_where" />
        and <include refid="pk_column" /> = #{id}
    </select>

    <select id="findByIdList" parameterType="java.util.List" resultMap="teamCoachResultMap">
        select * from <include refid="table_name" />
        <include refid="common_where" />
        <include refid="pk_in" />
    </select>

    <select id="findList" parameterType="java.util.List" resultMap="teamCoachResultMap">
        select * from <include refid="table_name" />
        <include refid="common_where" />
    </select>

    <insert id="add">
        insert into <include refid="table_name" /> 
            (coach_id, name, id_number, age, photo, team_id, team_name, create_time, delete_status)
        values(#{teamCoach.coachId}, #{teamCoach.name}, #{teamCoach.idNumber}, #{teamCoach.age}, #{teamCoach.photo},
            #{teamCoach.teamId}, #{teamCoach.teamName}, #{teamCoach.createTime}, #{teamCoach.deleteStatus})
    </insert>

    <update id="update">
        update <include refid="table_name" /> set
            name = #{teamCoach.name},
            id_number = #{teamCoach.idNumber},
            age = #{teamCoach.age},
            photo = #{teamCoach.photo},
            team_id = #{teamCoach.teamId},
            team_name = #{teamCoach.teamName},
            create_time = #{teamCoach.createTime},
            delete_status = #{teamCoach.deleteStatus}
        where <include refid="pk_column" /> = #{teamCoach.memberId}
    </update>
    
    <update id="delete">
        update <include refid="table_name" /> set
            delete_status = 1
        <include refid="common_where" />
        and <include refid="pk_column" /> = #{id}
    </update>
    
    <update id="batchDelete" parameterType="java.util.List" >
        update <include refid="table_name" /> set
            delete_status = 1
        <include refid="common_where" />
        <include refid="pk_in" />
    </update>

    <select id="getByWhere" parameterType="java.util.Map" resultMap="teamCoachResultMap">
        select * from <include refid="table_name" />
        <include refid="common_where" />
        <include refid="query_by_param" />
        limit 1
    </select>

    <select id="findByWhere" parameterType="java.util.Map" resultMap="teamCoachResultMap">
        select * from <include refid="table_name" />
        <include refid="common_where" />
        <include refid="query_by_param" />
    </select>
    
    <select id="queryCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) from <include refid="table_name" />
        <include refid="common_where" />
        <include refid="query_by_param" />
    </select>
    
    <update id="updateByWhere" parameterType="java.util.Map">
        update <include refid="table_name" /> set
        <foreach collection="updateMap" item="value" index="key" separator=",">
            ${key} = #{value}
        </foreach>
        <include refid="common_where" />
        <include refid="query_by_param" />
    </update>

</mapper>