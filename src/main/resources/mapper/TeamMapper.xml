<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="indi.xp.coachview.mapper.TeamMapper">

    <resultMap id="teamResultMap" type="indi.xp.coachview.model.Team">
        <id column="team_id" property="teamId" />
        <result column="team_name" property="teamName" />
        <result column="school_id" property="schoolId" />
        <result column="school_name" property="schoolName" />
        <result column="admin_id" property="adminId" />
        <result column="admin_name" property="adminName" />
        <result column="province" property="province" />
        <result column="province_name" property="provinceName" />
        <result column="city" property="city" />
        <result column="city_name" property="cityName" />
        <result column="region" property="region" />
        <result column="region_name" property="regionName" />
        <result column="county" property="county" />
        <result column="county_name" property="countyName" />
        <result column="street" property="street" />
        <result column="street_name" property="streetName" />
        <result column="status" property="status" />
        <result column="create_time" property="createTime" />
        <result column="active_time" property="activeTime" />
        <result column="delete_status" property="deleteStatus" />
    </resultMap>

    <sql id="table_name">
        team
    </sql>

    <sql id="pk_column">team_id</sql>
    
    <sql id="common_where">
        where delete_status = 0
        <include refid="auth_filter" />
    </sql>

    <sql id="query_by_param">
        <if test="paramMap != null and !paramMap.isEmpty()">
            <foreach collection="paramMap" item="valueList" index="key">
                <if test="valueList != null and valueList.length > 0">
                    and ${key} in
                    <foreach collection="valueList" item="value" open="(" separator="," close=")">
                        #{value}
                    </foreach>
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="auth_filter">
        <if test="authFilterMap != null and !authFilterMap.isEmpty()">
            <foreach collection="authFilterMap" item="valueList" index="key">
                <if test="valueList != null and valueList.length > 0">
                    and ${key} in
                    <foreach collection="valueList" item="value" open="(" separator="," close=")">
                        #{value}
                    </foreach>
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="pk_in">
        <if test="idList != null and idList.size() > 0">
            and team.team_id in
            <foreach collection="idList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </sql>

    <select id="getTeamById" parameterType="java.lang.String" resultMap="teamResultMap">
        select *
        from team
        <include refid="common_where" />
        and team_id = #{id}
    </select>

    <select id="getTeamByIdList" parameterType="java.util.List" resultMap="teamResultMap">
        select *
        from team
        <include refid="common_where" />
        <include refid="pk_in" />
    </select>

    <select id="findTeamList" parameterType="java.util.List" resultMap="teamResultMap">
        select *
        from team
        <include refid="common_where" />
    </select>

    <insert id="addTeam">
        insert into team(team_id, team_name, school_id,
            school_name, admin_id, admin_name, province, province_name, city,
            city_name, region, region_name, county, county_name, street,
            street_name, status, create_time, active_time, delete_status)
        values(#{team.teamId},
            #{team.teamName}, #{team.schoolId}, #{team.schoolName},
            #{team.adminId}, #{team.adminName},#{team.province}, #{team.provinceName}, 
            #{team.city}, #{team.cityName}, #{team.region}, #{team.regionName}, 
            #{team.county}, #{team.countyName}, #{team.street}, #{team.streetName}, 
            #{team.status}, #{team.createTime}, #{team.activeTime},
            #{team.deleteStatus})
    </insert>

    <update id="updateTeam">
        update team set
            team_name = #{team.teamName},
            school_id = #{team.schoolId},
            school_name = #{team.schoolName},
            admin_id = #{team.adminId},
            admin_name = #{team.adminName},
            province = #{team.province},
            province_name = #{team.provinceName},
            city = #{team.city},
            city_name = #{team.cityName},
            region = #{team.region},
            region_name = #{team.regionName},
            county = #{team.county},
            county_name = #{team.countyName},
            street = #{team.street},
            street_name = #{team.streetName},
            status = #{team.status},
            create_time = #{team.createTime},
            active_time = #{team.activeTime},
            delete_status = #{team.deleteStatus}
        where team_id = #{team.teamId}
    </update>
    
    <update id="delete">
        update <include refid="table_name" /> set
            delete_status = 1
        <include refid="common_where" />
        and team_id = #{id}
    </update>
    
    <update id="batchDelete" parameterType="java.util.List" >
        update <include refid="table_name" /> set
            delete_status = 1
        <include refid="common_where" />
        <include refid="pk_in" />
    </update>
    
    <select id="getByWhere" parameterType="java.util.Map" resultMap="teamResultMap">
        select * from <include refid="table_name" />
        <include refid="common_where" />
        <include refid="query_by_param" />
        limit 1
    </select>

    <select id="findByWhere" parameterType="java.util.Map" resultMap="teamResultMap">
        select * from <include refid="table_name" />
        <include refid="common_where" />
        <include refid="query_by_param" />
    </select>
    
    <select id="queryCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) from <include refid="table_name" />
        <include refid="common_where" />
        <include refid="query_by_param" />
    </select>
    
    <update id="updateByWhere" parameterType="java.util.Map">
        update <include refid="table_name" /> set
        <foreach collection="updateMap" item="value" index="key" separator=",">
            ${key} = #{value}
        </foreach>
        <include refid="common_where" />
        <include refid="query_by_param" />
    </update>
    
    <select id="findClubUserAuthorizedTeamIdList" parameterType="java.lang.String" resultType="java.lang.String">
        select team.team_id
        from team left join school on team.school_id = school.school_id  left join club on school.club_id = club.club_id 
        where team.delete_status = 0 and school.delete_status = 0 and club.delete_status = 0 
            and club.admin_id = #{uid}
        group by team.team_id
    </select>
    
    <select id="findSchoolUserAuthorizedTeamIdList" parameterType="java.lang.String" resultType="java.lang.String">
        select team.team_id
        from team left join school on team.school_id = school.school_id  left join club on school.club_id = club.club_id 
        where team.delete_status = 0 and school.delete_status = 0 and club.delete_status = 0 
            and school.admin_id = #{uid}
        group by team.team_id
    </select>
    
    <select id="findTeamUserAuthorizedTeamIdList" parameterType="java.lang.String" resultType="java.lang.String">
        select team.team_id
        from team left join school on team.school_id = school.school_id  left join club on school.club_id = club.club_id 
        where team.delete_status = 0 and school.delete_status = 0 and club.delete_status = 0 
            and team.admin_id = #{uid}
        group by team.team_id
    </select>

</mapper>